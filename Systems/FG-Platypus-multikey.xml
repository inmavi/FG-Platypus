<?xml version="1.0"?>

<!--
	This file defines vi-like key sequences which are started with the ':'-key.
	It's evaluated by $FG_ROOT/Nasal/multikey.nas.

	- <Esc> always aborts.
	- <Return>/<Enter> executes and terminates the command mode, given that
	  <binding>s exist (use "null" if there's nothing else to do) and <no-exit/>
	  isn't defined.
	- Keys with defined <exit/> property execute their bindings immediately,
	  that is: without having to press <Return>/<Enter>.
	- Format placeholder values are available to Nasal code via arg[].
	- Nasal code can set the dialog title by assignment to the _ variable.
	- <key> indices aren't used by the system, but are recommended to allow
	  reliable overwriting by aircraft or user xml files.
	- Cursor keys are equivalent to characters <, >, ^, _.
-->

<PropertyList>
	

	<key n="97">
		<name>a</name>
		<desc>M-Keys</desc><!-- reserved for aircraft extensions -->
		
			
		<key n="97">  <!--autopilot settings-->
			<name>a</name>
			<desc>Auto Pilot</desc>

			<key n="97">
				<name>a</name>
				<desc>AP On Off</desc>
				<exit/>
				<binding>
					<condition>
						<not>
						<property>gear/gear/wow</property>
						</not>
					</condition>	
						<command>property-cycle</command>
						<property>it-autoflight/input/ap</property>
						<value>1</value>
						<value>0</value>
				</binding>
			</key>

			<key n="104">
				<name>h</name>
				<desc>Toggle HDG/Roll</desc>
				<exit/>
				<binding>
					<command>nasal</command>
					<script>
						kap140.btnHDG();
					</script>
				</binding>
			</key>

			<key n="98">
				<name>b</name>
				<desc>Set Heading Bug</desc>
				<key n="901">
					<name>%f</name>
					<desc>Heading Bug = %.3f degree</desc>
					<binding>
						<command>nasal</command>
						<script>							
							setprop("/it-autoflight/input/hdg", arg[0]);
						</script>
					</binding>
				</key>
			</key>
			
			<key n="103">
				<name>g</name>
				<desc>GS App Mode</desc>
				<exit/>
				<binding>
					<command>nasal</command>
						<script>
							kap140.btnAPR();
						</script>
				</binding>
			</key>

			<key n="105">
				<name>i</name>
				<desc>Display ITAF</desc>
				<exit/>
				<binding>		
					<command>nasal</command>
					<script>libraries.ita();</script>
				</binding>
			</key>
			
			<key n="110">
				<name>n</name>
				<desc>Nav VOR Mode</desc>
				<exit/>
				<binding>
				<command>nasal</command>
					<script>
						kap140.btnNAV();
					</script>
				</binding>
			</key>

			<key n="115">
				<name>s</name>
				<desc>Set Nav Source N1 N2 GPS)</desc>
				<exit/>
				<binding>
					<command>property-cycle</command>
					<property>options/nav-source</property>
						<value>1</value>
						<value>3</value>
						<value>2</value>
				</binding>
			</key>
			
			<key n="119">
				<name>w</name>
				<desc>Set Roll Mode</desc>
				<exit/>
				<binding>
					<command>nasal</command>
					<script>				
						kap140.btnHDG();
					</script>
				</binding>
			</key>

		</key>

		<!--dialogs-->
		<key n="100">  
			<name>d</name>
			<desc>Dialogs</desc>
			
		<key n="97">
			<name>a</name>
			<desc>Autopilot Settings</desc>
			<exit/>
			<binding>
				<command>dialog-show</command>
				<dialog-name>autopilot</dialog-name>
			</binding>
		</key>

		<key n="102">
			<name>f</name>
			<desc>Fuel and Payload</desc>
			<exit/>
			<binding>
				<command>nasal</command>
				<script>gui.showWeightDialog()</script>
			</binding>
		</key>

		<key n="103">
			<name>g</name>
			<desc>GPS Settings</desc>
			<exit/>
			<binding>
				<command>dialog-show</command>
				<dialog-name>gps</dialog-name>
			</binding>
		</key>

		<key n="104">
			<name>h</name>
			<desc>Chat History</desc>
			<exit/>
			<binding>
				<command>dialog-show</command>
				<dialog-name>chat-full</dialog-name>
			</binding>
		</key>

		<key n="105">
			<name>i</name>
			<desc>Instrument Settings</desc>
			<exit/>
			<binding>
				<command>dialog-show</command>
				<dialog-name>instruments</dialog-name>
			</binding>
		</key>

		<key n="109">
			<name>m</name>
			<desc>Multiplayer Pilot List</desc>
			<exit/>
			<binding>
				<command>nasal</command>
				<script>multiplayer.dialog.show()</script>
			</binding>
		</key>

		<key n="112">
			<name>p</name>
			<desc>Position aircraft</desc>
			<key n="97">
				<name>a</name>
				<desc>Position aircraft in air</desc>
				<exit/>
				<binding>
					<command>dialog-show</command>
					<dialog-name>location-in-air</dialog-name>
				</binding>
			</key>			
		</key>

		<key n="114">
			<name>r</name>
			<desc>Radio Settings</desc>
			<exit/>
			<binding>
				<command>dialog-show</command>
				<dialog-name>radios</dialog-name>
			</binding>
		</key>
		
		<key n="116">
			<name>t</name>
			<desc>Time Settings</desc>
			<exit/>
			<binding>
				<command>dialog-show</command>
				<dialog-name>timeofday</dialog-name>
			</binding>
		</key>

		<key n="118">
			<name>v</name>
			<desc>View options</desc>
			<exit/>
			<binding>
				<command>dialog-show</command>
				<dialog-name>view</dialog-name>
			</binding>
		</key>

		<key n="119">
			<name>w</name>
			<desc>Weather Conditions</desc>
			<exit/>
			<binding>
				<command>dialog-show</command>
				<dialog-name>weather</dialog-name>
			</binding>
		</key>
	</key>

		
	<!-- environment -->
	<key n="99">
		<name>e</name>
		<desc>Environment</desc>
		<key n="69">
			<name>w</name>
			<desc>Weather</desc>
			<key n="119">
				<name>s</name>
				<desc>Weather Scenario</desc>
				<key n="115">
					<name>f</name>
					<desc>Weather Scenario = Fair weather</desc>
					<binding>
						<command>nasal</command>
						<script>
							setprop("/environment/weather-scenario", "Fair weather");
						</script>
					</binding>
				</key>

				<key n="109">
					<name>m</name>
					<desc>Weather Scenario = METAR</desc>
					<binding>
						<command>nasal</command>
						<script>
							setprop("/environment/weather-scenario", "METAR");
						</script>
					</binding>
				</key>

				<key n="110">
					<name>n</name>
					<desc>Weather Scenario = none</desc>
					<binding>
						<command>nasal</command>
						<script>
							setprop("/environment/weather-scenario", "none");
						</script>
					</binding>
				</key>

				<key n="116">
					<name>t</name>
					<desc>Weather Scenario = Thunderstorm</desc>
					<binding>
						<command>nasal</command>
						<script>
							setprop("/environment/weather-scenario", "Thunderstorm");
						</script>
					</binding>
				</key>
			</key>
		</key>
		
		<key n="99">
			<name>c</name>
			<desc>Config Wind</desc>
			<exit/>
			<binding>
				<command>dialog-show</command>
				<dialog-name>windconfig</dialog-name>
			</binding>
		</key>

		<key n="116">
			<name>t</name>
			<desc>Time Settings</desc>
			<key n="99">
				<name>c</name>
				<desc>Clock Time</desc>
				<exit/>
				<binding>
					<command>timeofday</command>
					<timeofday>real</timeofday>
				</binding>
			</key>

			<key n="49">
				<name>1</name>
				<desc>Dawn</desc>
				<exit/>
				<binding>
					<command>timeofday</command>
					<timeofday>dawn</timeofday>
				</binding>
			</key>

			<key n="50">
				<name>2</name>
				<desc>Morning</desc>
				<exit/>
				<binding>
					<command>timeofday</command>
					<timeofday>morning</timeofday>
				</binding>
			</key>

			<key n="51">
				<name>3</name>
				<desc>Noon</desc>
				<exit/>
				<binding>
					<command>timeofday</command>
					<timeofday>noon</timeofday>
				</binding>
			</key>

			<key n="52">
				<name>4</name>
				<desc>Afternoon</desc>
				<exit/>
				<binding>
					<command>timeofday</command>
					<timeofday>afternoon</timeofday>
				</binding>
			</key>

			<key n="53">
				<name>5</name>
				<desc>Dusk</desc>
				<exit/>
				<binding>
					<command>timeofday</command>
					<timeofday>dusk</timeofday>
				</binding>
			</key>

			<key n="54">
				<name>6</name>
				<desc>Evening</desc>
				<exit/>
				<binding>
					<command>timeofday</command>
					<timeofday>evening</timeofday>
				</binding>
			</key>

			<key n="55">
				<name>7</name>
				<desc>Midnight</desc>
				<exit/>
				<binding>
					<command>timeofday</command>
					<timeofday>midnight</timeofday>
				</binding>
			</key>

		</key>
	</key>

		

			<!-- sub5 -->
		<key n="114">
			<name>r</name>
			<desc>Route Manager</desc>
			<binding>
				<command>null</command>
			</binding>

			<key n="99">
				<name>c</name>
				<desc>UHF set Channel</desc>
				<key n="60">
					<name>&gt;</name>
					<desc>UHF set Channel up</desc>
					<no-exit/>
					<binding>
						<command>nasal</command>
						<script>_ = sprintf("Chan %02u Freq %3f", an_arc_159v1.adj_channel(1), an_arc_159v1.get_selected())</script>
					</binding>


				</key>
				<key n="62">
					<name>&lt;</name>
					<desc>UHF set Channel down</desc>
					<no-exit/>
					<binding>
						<command>nasal</command>
						<script>_ = sprintf("Chan %02u Freq %3f", an_arc_159v1.adj_channel(-1), an_arc_159v1.get_selected())</script>
					</binding>
				</key>

				<key n="102">
					<name>f</name>
					<desc>UHF change Channel Frequency = ? kHz (225000-400000)</desc>
					<key n="902">
						<name>%u</name>
						<desc>UHF frequency = %u kHz</desc>
						<binding>
							<command>nasal</command>
							<script>an_arc_159v1.set_freq(arg[0]); an_arc_159v1.load(arg[0])</script>
						</binding>
					</key>
				</key>
			</key>

			<key n="111">
				<name>o</name>
				<desc>UHF set Function PRESET - Mode MAIN</desc>
				<binding>
					<command>nasal</command>
					<script>an_arc_159v1.Mode.setValue(1); an_arc_159v1.turn_on(); an_arc_159v1.Function.setValue(0);</script>
				</binding>
			</key>
			<key n="47">
				<name>/</name>
				<desc>UHF set Mode OFF</desc>
				<binding>
					<command>nasal</command>
					<script>an_arc_159v1.Mode.setValue(0); an_arc_159v1.turn_off()</script>
				</binding>
			</key>
		</key>
		
			<!-- sub6 -->
		<key n="117">
			<name>u</name>
			<desc>Utilities</desc>
			<binding>
				<command>null</command>
			</binding>

			<key n="108">
			<name>l</name>
			<desc>Listeners Open</desc>
			<exit/>
			<binding>
            	<command>nasal</command>
            		<script>								
						var ls = setlistener("/sim/test", func(){
						print("Property '/sim/test' has been changed");
						});
						setprop("/sim/test", "blah"); # trigger listener
						var rem = removelistener(ls); # remove listener
						gui.popupTip("Currently there are  " ~ rem ~ " listeners open  " , 4);									
					</script>
				</binding>
		</key>

		<key n="98">
			<name>b</name>
			<desc>Property Browser</desc>
			<exit/>
			<binding>
				<command>nasal</command>
				<script>gui.property_browser()</script>
			</binding>
		</key>

		<key n="110">
			<name>n</name>
			<desc>Nasal Console</desc>
			<exit/>
			<binding>
				<command>dialog-show</command>
				<dialog-name>nasal-console</dialog-name>
			</binding>
		</key>

		<key n="115">
			<name>s</name>
			<desc>On-screen stats level (0-4)</desc>
			<key n="901">
				<name>%u</name>
				<desc>Set on-screen statistics level</desc>
				<exit/>
				<binding>
					<command>nasal</command>
					<script>setprop("/sim/rendering/on-screen-statistics", arg[0])</script>
				</binding>
			</key>
		</key>
				
	</key>
				
	</key>

</PropertyList>
