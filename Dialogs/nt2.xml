<?xml version="1.0"?>
<PropertyList>
  <name>nt2</name>
  <modal>false</modal>
  <layout>vbox</layout>
	<color>
		<alpha>1</alpha>
	</color>
	
    <group>
    <layout>hbox</layout>
    <empty><stretch>1</stretch></empty>

    <text>
      <label>Select Approach</label>
    </text>

    <empty><stretch>1</stretch></empty>

	<button>
		<halign>right</halign>
		<pref-width>20</pref-width>
		<pref-height>20</pref-height>
		<legend>X</legend>
		<key>Esc</key>
		<binding>
			<command>dialog-close</command>
		</binding>
	</button>
  </group>

  <hrule/>

  <group>
    <layout>table</layout>
    <default-padding>5</default-padding>

    <text>
      <row>0</row>
      <col>0</col>
      <halign>right</halign>
      <label>Airport:</label>
    </text>

      <row>0</row>
      <col>1</col>
      <layout>hbox</layout>
      <default-padding>0</default-padding>
      

    <input>
      <row>0</row>
      <col>3</col>
      <width>35</width>
      <height>25</height>
      <live>true</live>
      <property>/nt/apid</property>
      <binding>
        <command>dialog-apply</command>
      </binding>
    </input> 

    <text>
      <row>1</row>
      <col>0</col>
      <halign>right</halign>
      <label>Runway:</label>
    </text>

      <row>1</row>
      <col>1</col>
      <layout>hbox</layout>
      <default-padding>0</default-padding>
     
    <input>
      <row>1</row>
      <col>3</col>
      <width>75</width>
      <height>25</height>
      <live>true</live>
      <property>/nt/rwid</property><property>/sim/presets/runway</property>
      <binding>
        <command>dialog-apply</command>
      </binding>
    </input> 

	<text>
      <row>2</row>
      <col>0</col>
      <halign>right</halign>
      <label>Altitude:</label>
    </text>

      <row>2</row>
      <col>1</col>
      <layout>hbox</layout>
      <default-padding>0</default-padding>
     
    <input>
      <row>2</row>
      <col>3</col>
      <width>75</width>
      <height>25</height>
      <live>true</live>
      <property>/nt/alti</property>
      <binding>
        <command>dialog-apply</command>
      </binding>
    </input> 

	<text>
      <row>3</row>
      <col>0</col>
      <halign>right</halign>
      <label>Distance:</label>
    </text>

      <row>3</row>
      <col>1</col>
      <layout>hbox</layout>
      <default-padding>0</default-padding>
     
    <input>
      <row>3</row>
      <col>3</col>
      <width>75</width>
      <height>25</height>
      <live>true</live>
      <property>/nt/dist</property>
      <binding>
        <command>dialog-apply</command>
      </binding>
    </input>  

	<text>
      <row>4</row>
      <col>0</col>
      <halign>right</halign>
      <label>Speed:</label>
    </text>

      <row>4</row>
      <col>1</col>
      <layout>hbox</layout>
      <default-padding>0</default-padding>
     
    <input>
      <row>4</row>
      <col>3</col>
      <width>75</width>
      <height>25</height>
      <live>true</live>
      <property>/nt/spd</property>
      <binding>
        <command>dialog-apply</command>
      </binding>
    </input>                                                
   </group> 

  <hrule/>

	<group>
			<layout>vbox</layout>			
			
			<textbox>
                    <name>selectapproach</name>
                    <halign>fill</halign>
                    <stretch>true</stretch>
                    <pref-height>300</pref-height>
                    <height>300</height>
                    <pref-width>480</pref-width>
                    <editable>false</editable>
                    <wrap>true</wrap>
                    <live>true</live>
                    <top-line>0</top-line>
                    <property>/sim/sap</property>
                </textbox>			
			
		</group>
  <hrule/>

  <button>
    <legend>Run</legend>
    <default>true</default>
    <key>Esc</key>
		<binding>
	<command>nasal</command>
	<script>
		var window = screen.window.new(nil, -65, 1, 5);
		window.fg = [1, 1, 1, 1]; 	
		window.align = "left";
		window.write("Please wait, loading...",1,1,0 );
	</script>
	</binding>
    <binding>
      <command>nasal</command>
		<script>
			setprop("/controls/engines/engine/magnetos", 0);
     setprop("/controls/switches/avionics-master", 0);
		    	
			libraries.cleanup();
	fgcommand("timeofday", props.Node.new({ "timeofday" : "morning" }));

		setprop("/systems/saloft",1);
		setprop("/systems/bp",1);								
		setprop("/systems/nora",1);
		setprop("/systems/nonav1",0);
		setprop("/options/trm",0);
		setprop("/systems/nonav2",0);
		setprop("/sim/freeze/clock",1);
		var apid = getprop("/nt/apid");
		var rwid = getprop("/nt/rwid");
		var alti = getprop("/nt/alti");
		var spd = getprop("/nt/spd");
		var dist = getprop("/nt/dist");
			if (getprop("/systems/saloft") == 1)  {
				setprop("/sim/presets/running", 1);
				setprop("/controls/electrical/battery", 1);
				setprop("/controls/electrical/alternator", 1);
				setprop("/controls/switches/avionics-master", 1);
				setprop("/controls/engines/engine[0]/magnetos-switch", 3);
				setprop("/controls/switches/fuel-pump", 1);
				setprop("/controls/engines/engine/throttle", 1);
				setprop("/controls/engines/engine/mixture", 1);
				setprop("/controls/engines/engine[0]/magnetos-switch", 4);
				setprop("/controls/engines/engine/running", 1);
				setprop("/controls/engines/engine[0]/magnetos-switch", 3);
				setprop("/controls/switches/panel-lights-factor", 1);
				setprop("/controls/switches/nav-lights", 1);
				setprop("/controls/switches/nav-lights-factor", 1);
				setprop("/controls/switches/strobe-lights", 1);	
				setprop("/controls/switches/panel-lights-factor", 1);
				setprop("/it-autoflight/input/ap", 1);		
				setprop("/it-autoflight/input/lat", 0);
				setprop("/controls/engines/engine/throttle", 0.90);
				setprop("/controls/engines/engine/starter", 0);
				setprop("/controls/switches/landing-light", 1);
				setprop("/engines/engine/fuel-pressure-psi", 4.3);
				setprop("/systems/vbo", 0);
				setprop("/systems/fl", 0);
				setprop("/controls/flight/flaps", 0.0);
				setprop("/environment/weather-scenario", "Core high pressure region");
					if (getprop("/systems/nbat")== 0) {
						var inc = props.globals.getNode("/systems/starts");
						inc.setValue(inc.getValue() + 1);	}
							if (getprop("/systems/starts") > 321)  {
								logger.screen.red("Electrical systems malfunction,engine can not start, please restart on the ground
and replace your depleted battery", 3);
							}
					}					 
		aircraft.teleport(airport = apid, runway = rwid,lat = -9999, lon = -9999, alt = alti,
		speed = spd, distance = dist, azimuth = 0, glideslope = 0, heading = 9999) ;
		setprop("/controls/gear/brake-parking", 0);
		davtron803.davtron_flight_time.reset();
		davtron803.davtron_flight_time.start();
			# set ILS frequency if airborne and change to sim preset ap or ap7rm destination
		#if no ils get vor, if no vor message no vor or ils present
      var cur_runway = getprop("sim/presets/runway");
      var runways = airportinfo(getprop("sim/presets/airport-id")).runways;
      var r =runways[cur_runway];
      if (r != nil and r.ils != nil) {
            setprop("instrumentation/nav/frequencies/selected-mhz", (r.ils.frequency / 100));					
				var win = screen.window.new(nil, -80, 1, 9);
				win.fg = [1, 1, 1, 1]; 	
				win.align = "left";
				win.write("Nav1 set to ILS Frequency ",1,0,0 );
				} else {
				var win = screen.window.new(nil, -80, 1, 9);
				win.fg = [1, 1, 1, 1]; 	
				win.align = "left";
				win.write("Selected Runway has no ILS",1,0,0 );
				}
		</script>
    </binding>
	
	<binding>
      <command>dialog-close</command>
    </binding>
  </button>

</PropertyList>
